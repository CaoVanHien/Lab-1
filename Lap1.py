# M√£ m√†u ANSI cho m√†u tr·∫Øng v√† xanh lam
WHITE = '\u001b[47m'  # N·ªÅn tr·∫Øng
BLUE = '\u001b[44m'   # N·ªÅn xanh lam
END = '\u001b[0m'     # ƒê·∫∑t l·∫°i m√†u v·ªÅ m·∫∑c ƒë·ªãnh

# T·∫°o h√¨nh ·∫£nh l√° c·ªù Ph·∫ßn Lan trong terminal
for i in range(9):  # T·∫°o 9 d√≤ng cho l√° c·ªù
    if 3 <= i <= 5:  # C√°c d√≤ng 4, 5, 6 c√≥ d·∫£i m√†u xanh ngang
        print( BLUE + " " * 40 + END)
    else:  # C√°c d√≤ng c√≤n l·∫°i l√† n·ªÅn tr·∫Øng v·ªõi d·∫£i xanh d·ªçc
        print(WHITE + " " * 10 + BLUE + " " * 7 + WHITE + " " * 23 + END)
print()





import math

def draw_two_circles_touching(radius):
    diameter = 2 * radius
    for y in range(-radius, radius + 1):
        for x in range(-radius * 2, radius * 2 + 1):
            # H√¨nh tr√≤n th·ª© nh·∫•t (t√¢m ·ªü v·ªã tr√≠ (-radius, 0))
            if math.sqrt((x + radius)**2 + y**2) <= radius:
                print("*", end="")
            # H√¨nh tr√≤n th·ª© hai (t√¢m ·ªü v·ªã tr√≠ (radius, 0))
            elif math.sqrt((x - radius)**2 + y**2) <= radius:
                print("*", end="")
            else:
                print(" ", end="")
        print()  # Xu·ªëng d√≤ng sau m·ªói h√†ng

# G·ªçi h√†m v·ªõi b√°n k√≠nh l√† 5
draw_two_circles_touching(5)
print ()






def plot_function():
    height = 9   # S·ªë d√≤ng theo chi·ªÅu Y
    width = 18   # Chi·ªÅu r·ªông theo chi·ªÅu X (g·∫•p ƒë√¥i ƒë·ªÉ ph√π h·ª£p v·ªõi t·ª∑ l·ªá)
    
    for y in range(height, -1, -1):  # L·∫∑p qua t·ª´ng d√≤ng t·ª´ d∆∞·ªõi l√™n
        line = ""
        for x in range(width + 1):   # L·∫∑p qua t·ª´ng k√Ω t·ª± trong m·ªôt d√≤ng
            if x == 0 and y == 0:
                line += "+"  # ƒêi·ªÉm giao nhau c·ªßa hai tr·ª•c
            elif x == 0:
                line += "|"  # Tr·ª•c Y
            elif y == 0:
                line += "_"  # Tr·ª•c X
            elif y == x // 2:  # Ki·ªÉm tra xem ƒëi·ªÉm c√≥ thu·ªôc ƒë·ªì th·ªã y = x / 2 kh√¥ng
                line += "*"
            else:
                line += " "  # Kho·∫£ng tr·ªëng
        print(line)

plot_function()
print()





def filter_number():
    # M√£ m√†u cho terminal
    GREEN = '\033[92m'
    RED = '\033[91m'
    END = '\033[0m'
    
    # M·ªü file an to√†n v√† x·ª≠ l√Ω l·ªói n·∫øu kh√¥ng t√¨m th·∫•y
    try:
        with open('d:/ProjectPython/Lab-1/sequence.txt', 'r') as file:
            filtered_list = []  # ƒê·ªïi t√™n bi·∫øn list
            count = 0
            count_all = 0
            
            for line in file:
                number = line.strip()
                if number:  # Ki·ªÉm tra xem d√≤ng c√≥ r·ªóng kh√¥ng
                    try:
                        num = float(number)
                        count_all += 1
                        # ƒêi·ªÅu ki·ªán l·ªçc
                        if (5 <= num <= 10) or (-10 <= num <= -5):
                            filtered_list.append(num)
                            count += 1
                    except ValueError:
                        print(f"Kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi '{number}' th√†nh s·ªë th·ª±c. B·ªè qua d√≤ng.")
            
            # T√≠nh t·ª∑ l·ªá ph·∫ßn trƒÉm
            if count_all > 0:
                percent = (count / count_all) * 100
            else:
                percent = 0

            # In ra k·∫øt qu·∫£
            print("List: ", end="")
            print(filtered_list)
            
            print(f'{GREEN}{"  "}{END}{" T·ª´ 5 ƒë·∫øn 10 v√† T·ª´ -10 ƒë·∫øn -5 | S·ªë l∆∞·ª£ng: "}{count}{" | T·ª∑ l·ªá ph·∫ßn trƒÉm: "}{round(percent , 1)}{" %"}')
            print(f'{RED}{"  "}{END}{" C√°c s·ªë kh√°c | S·ªë l∆∞·ª£ng: "}{count_all - count}{" | T·ª∑ l·ªá ph·∫ßn trƒÉm: "}{round(100-percent , 1)}{" %"}')

    except FileNotFoundError:
        print("L·ªói: Kh√¥ng t√¨m th·∫•y t·ªáp 'sequence.txt'.")

# G·ªçi h√†m
filter_number()
print()




import os
import time

def clear_console():
    # S·ª≠ d·ª•ng 'cls' cho Windows, 'clear' cho c√°c h·ªá ƒëi·ªÅu h√†nh kh√°c
    os.system('cls' if os.name == 'nt' else 'clear')

def animation():
    frames = [
        "Khung h√¨nh 1: üåü",
        "Khung h√¨nh 2: üåô",
        "Khung h√¨nh 3: üåà"
    ]
    
    while True:
        for frame in frames:
            clear_console()  # L√†m s·∫°ch console
            print(frame)     # In khung h√¨nh hi·ªán t·∫°i
            time.sleep(2)    # T·∫°m d·ª´ng 2 gi√¢y gi·ªØa c√°c khung h√¨nh

# G·ªçi h√†m ho·∫°t ·∫£nh
animation()
